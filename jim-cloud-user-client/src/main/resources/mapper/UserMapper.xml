<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jim.cloud.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.jim.cloud.po.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="phone_num" property="phoneNum" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="level" property="level" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, `name`, user_name, pwd, phone_num, balance, `level`, `status`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from `user`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `user`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jim.cloud.po.User" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `user` (`name`, user_name, pwd, 
      phone_num, balance, `level`, 
      `status`)
    values (#{name,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{phoneNum,jdbcType=VARCHAR}, #{balance,jdbcType=DECIMAL}, #{level,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jim.cloud.po.User" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        `name`,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="phoneNum != null" >
        phone_num,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="level != null" >
        `level`,
      </if>
      <if test="status != null" >
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null" >
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="level != null" >
        #{level,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jim.cloud.po.User" >
    update `user`
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null" >
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="level != null" >
        `level` = #{level,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jim.cloud.po.User" >
    update `user`
    set `name` = #{name,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL},
      `level` = #{level,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>